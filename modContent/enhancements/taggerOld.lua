SMODS.Enhancement {
    key = "taggerOld",
    -- This refers to the atlas keys defined in atlas.lua. It is NOT necessarily the name of the image atlas file.
    atlas = "enhancementAtlas",
    -- This is the position of the enhancement icon on the enhancement atlas.
    pos = {x=0, y=0},
    -- Config for the enhancement.
    config = {
        mult = 10,
    },
    -- Prevents the enhancement from being generated by grim, familiar, or incantation cards
    overrides_base_rank = true,
    
    -- This is used by the localization file to get the variables for the enhancement to display in the UI. (e.g. vars = {card.ability.mult} means #1# in the localization file will be replaced with the value of card.ability.mult)
    loc_vars = function(self, info_queue, card)
        return {
          vars = {
            card.ability.mult
          }
        }
    end,

    -- Calculate function for the enhancement.
    calculate = function(self, card, context)
        -- If the context is after scoring, and the cardarea is the play area, continue.
        if context.after and context.cardarea == G.play then
            -- Loop through the scoring hand.
            for index, otherCard in ipairs(context.scoring_hand) do
                -- If we found our card, continue.
                if card == otherCard then
                    -- If the next card exists, continue.
                    if (index + 1) < #context.scoring_hand then
                        -- For some reason, this is the only way to get the card to have the visual effect of being tagged happen along with the text.
                        G.E_MANAGER:add_event(Event({
                            func = function() 
                                local enhanceSave = next(SMODS.get_enhancements(context.scoring_hand[index + 1])) == nil and "c_base" or next(SMODS.get_enhancements(context.scoring_hand[index + 1]));
                                context.scoring_hand[index + 1]:set_ability(G.P_CENTERS[next(SMODS.get_enhancements(card))]);
                                card:set_ability(G.P_CENTERS[enhanceSave]);
                                return true 
                            end
                        }))
                        -- Return the message to display when the enhancement is applied.
                        return {
                            message = 'Tagged!',
                            message_card = context.scoring_hand[index + 1],
                            colour = G.C.RED,
                        }
                    end
                end
            end
        end
    end,
}